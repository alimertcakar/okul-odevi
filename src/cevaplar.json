{
  "Leetcode": {
    "sorular": ["Soru 9", "Soru 19", "Soru 29"],
    "cevaplar": [
      "~function findPythagoreanTriplet(tripletSum) {\r\n    let abc = [...(Array(tripletSum || 1000).keys())]\r\n    abc.forEach(c => {\r\n        for (let a = 1; a <= abc.length; a++) {\r\n            for (let b = 1; b <= abc.length; b++) {\r\n                if (!(a + b + c === abc.length)) continue;\r\n                if ((a * a) + (b * b) === c * c) {\r\n                    return(`${a}^2 + ${b}^2 === ${c}^2 || the abc(answer) is ${a * b * c}`)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n    })\r\n}();\r\n",
      "\r\nfunction sol19() {\r\n    let months = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\r\n    let currentDay = 1;\r\n    let sundays = 0;\r\n    for (let year = 1900; year <= 2000; year++) {\r\n        months[1] = 28 + (year % 4 === 0 && (year % 100 !== 0 && year % 400 === 0));\r\n               for (month of months) {\r\n            currentDay += month % 7;\r\n            if (year === 1900) { months[1] = 28; continue; }\r\n            currentDay % 7 === 0 ? sundays++ : null;\r\n        }\r\n    }\r\n    return sundays;\r\n}\r\n\r\n ",
      "let p29 = (a, b, abmax) => {\r\n    let result = new Set();\r\n    for (let i = a; i < abmax; i++) {\r\n        for (let j = b; j < abmax; j++) {\r\n            result.add(i ** j);\r\n        }\r\n    }\r\n    return result.size;\r\n}\r\n p29(2n, 2n, 101) "
    ],
    "cevapAciklamasi": [
      "Çözüm açıklama 1",
      "Çözüm açıklama 2",
      "Çözüm açıklama 3"
    ]
  },
  "Euler": {
    "sorular": ["Soru 9", "Soru 929", "Soru 1299"],
    "cevaplar": [
      "function isPalindrome(n) {\r\n        n = n || 1881; \r\n        if (n < 0) return false;\r\n        else if (n < 10) return true;\r\n        let reverse = null; currentNumber = n;\r\n        while (currentNumber > 0) {\r\n            reverse = reverse * 10 + currentNumber % 10;\r\n            currentNumber = Math.floor(currentNumber / 10)\r\n        }\r\n        return (reverse === n)\r\n    }\r\n    \r\n     ",
      "let numUniqueEmails = function (emails) {\r\n    let result = new Set();\r\n    for (email of emails) {\r\n        result.add(normalize(email));\r\n    }\r\n    return (result.size);\r\n};\r\nfunction normalize(email) {\r\n    let at = email.indexOf(\"@\");\r\n    let local = email.slice(0, at);\r\n    let rest = email.slice(at, email.length);\r\n    let plus = email.indexOf(\"+\");    //remove characters after plus\r\n    let cutPlus = local.slice(plus);\r\n    if (plus !== -1) local = local.replace(cutPlus, \"\")\r\n    local = local.replace(/\\./g, \"\")\r\n    return (local + rest); //remove dots\r\n}\r\n\r\n",
      "let arr = [17, 18, 5, 4, 6, 1];\r\nlet replaceElements = function (arr, ind) {\r\n    arr = arr.reverse();\r\n    let sol = [], max = null;\r\n    for (let i = 0; i < arr.length; i++) {\r\n        if (arr[i] > max) {\r\n            sol.push(max)\r\n            max = arr[i]\r\n        }\r\n        else {\r\n            sol.push(max)\r\n        }\r\n    }\r\n    sol.reverse()[sol.length - 1] = -1;\r\n    return sol;\r\n};\r\n\r\n  replaceElements(arr) "
    ],
    "cevapAciklamasi": [
      "Çözüm açıklama 1",
      "Çözüm açıklama 2",
      "Çözüm açıklama 3"
    ]
  }
}
